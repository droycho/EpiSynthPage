<h1>Creating the Modulation Synthesizer with Processing</h1>

<h3>The Concept</h3>
<p>
  This application is meant to simulate a basic audio-frequency modulation synthesizer. The display will have a keyboard for a visual representation of a synthesizer keyboard, as well as a simulated "Kaoss Pad" which will manipulate frequencies with whatever modulator is activated. Modulators can be activated by pressing its specified number on the keyboard. The on-screen synthesizer will be mapped to the user's computer keyboard. The key map can be found <a href="/download">here</a> or in the "Download and Play" link below.
</p>

<h3>Why Processing?</h3>
<p>
  The Processing IDE combined with the Beads Library allows users with only a basic understanding of Java code and/or frequency modulation to work with advanced modulation tools that are found on real modulation synthesizers. Since the team only has basic to intermediate understandings of Java and a basic understanding of the <a href="http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm" target="_blank">extremely complex equations</a> involved with frequency modulation, hard coding the synthesizer in pure Java from a plain-text editor, such as Atom or Sublime, would have been near incredibly difficult at our level. Processing allows the developer to use very basic commands, variables, and arguments and will automatically assign the complex <a href="https://www.soundonsound.com/sos/may00/articles/synth.htm" target="_blank">algorithms</a> needed to power the frequency modulators. These algorithms can be modified simply by defining their parameters in the variable arguments. This allows the team to focus on building the actual synthesizer rather than figure out the math that powers the sound frequencies.
</p>

<h3><a href="/processing">What is Processing 3?</a></h3>
<h3><a href="/modular">What is a Modulation Synthesizer?</a></h3>
<h3><a id="downLoad" href="/download">Download and Play</a></h3>
<h3><a href="/">Home</a></h3>
